# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: 3

silent: true

tasks:
  # =================
  # === TERRAFORM ===
  # =================
  init:
    desc: "Terraform initialize"
    dir: "{{.USER_WORKING_DIR}}/{{.TERRAFORM_DIR}}/environment/{{.STAGE}}"
    vars:
      TERRAFORM_DIR: '{{default "1-terraform" .TERRAFORM_DIR}}'
    cmds:
      - echo ""
      - echo "ðŸš€ tasks-terraform - init [ TERRAFORM_DIR - {{.TERRAFORM_DIR}}, STAGE - {{.STAGE}} ]"
      - 'echo "   cwd: $(pwd)"'
      - echo ""
      - terraform init -upgrade
    requires:
      vars: [STAGE]

  init:backend:
    desc: "Terraform initialize"
    dir: "{{.USER_WORKING_DIR}}/{{.TERRAFORM_DIR}}/environment/{{.STAGE}}"
    vars:
      TERRAFORM_DIR: '{{default "1-terraform" .TERRAFORM_DIR}}'
    cmds:
      - echo ""
      - echo "ðŸš€ tasks-terraform - init:backend [ TERRAFORM_DIR - {{.TERRAFORM_DIR}}, STAGE - {{.STAGE}}, GITLAB_HOST - {{.GITLAB_HOST}}, HTTP_USERNAME - {{.HTTP_USERNAME}}, HTTP_PASSWORD - ***, GITLAB_PROJECT_ID - {{.GITLAB_PROJECT_ID}} ]"
      - 'echo "   cwd: $(pwd)"'
      - echo ""
      - |
        export GITLAB_ACCESS_TOKEN=${TF_HTTP_PASSWORD}
        export TF_STATE_NAME={{.STAGE}}
        terraform init -reconfigure \
            -backend-config="address=https://gitlab.com/api/v4/projects/69889235/terraform/state/$TF_STATE_NAME" \
            -backend-config="lock_address=https://gitlab.com/api/v4/projects/69889235/terraform/state/$TF_STATE_NAME/lock" \
            -backend-config="unlock_address=https://gitlab.com/api/v4/projects/69889235/terraform/state/$TF_STATE_NAME/lock" \
            -backend-config="username=abes140377" \
            -backend-config="password=$GITLAB_ACCESS_TOKEN" \
            -backend-config="lock_method=POST" \
            -backend-config="unlock_method=DELETE" \
            -backend-config="retry_wait_min=5"
      # - |
      #   terraform init \
      #     -reconfigure \
      #     -backend-config=address="https://{{.GITLAB_HOST}}/api/v4/projects/${GITLAB_PROJECT_ID}/terraform/state/{{.STAGE}}" \
      #     -backend-config=lock_address="https://{{.GITLAB_HOST}}/api/v4/projects/${GITLAB_PROJECT_ID}/terraform/state/{{.STAGE}}/lock" \
      #     -backend-config=lock_method="POST" \
      #     -backend-config=unlock_address="https://{{.GITLAB_HOST}}/api/v4/projects/${GITLAB_PROJECT_ID}/terraform/state/{{.STAGE}}/lock" \
      #     -backend-config=unlock_method="DELETE" \
      #     -backend-config=username="{{.HTTP_USERNAME}}" \
      #     -backend-config=password="{{.HTTP_PASSWORD}}" \
      #     -backend-config=retry_wait_min="5"
    requires:
      vars:
        [STAGE, GITLAB_HOST, HTTP_USERNAME, HTTP_PASSWORD, GITLAB_PROJECT_ID]

  validate:
    desc: "Terraform validate"
    dir: "{{.USER_WORKING_DIR}}/{{.TERRAFORM_DIR}}/environment/{{.STAGE}}"
    vars:
      TERRAFORM_DIR: '{{default "1-terraform" .TERRAFORM_DIR}}'
    cmds:
      - echo ""
      - echo "ðŸš€ tasks-terraform - validate [ TERRAFORM_DIR - {{.TERRAFORM_DIR}}, STAGE - {{.STAGE}} ]"
      - 'echo "   cwd: $(pwd)"'
      - echo ""
      - terraform validate
    requires:
      vars: [STAGE]

  plan:
    desc: "Terraform plan"
    dir: "{{.USER_WORKING_DIR}}/{{.TERRAFORM_DIR}}/environment/{{.STAGE}}"
    vars:
      TERRAFORM_DIR: '{{default "1-terraform" .TERRAFORM_DIR}}'
    cmds:
      - echo ""
      - echo "ðŸš€ tasks-terraform - plan [ TERRAFORM_DIR - {{.TERRAFORM_DIR}}, STAGE - {{.STAGE}} ]"
      - 'echo "   cwd: $(pwd)"'
      - echo ""
      - terraform plan -out=.terraform/tfplan
    requires:
      vars: [STAGE]

  show:
    desc: "Terraform show"
    dir: "{{.USER_WORKING_DIR}}/{{.TERRAFORM_DIR}}/environment/{{.STAGE}}"
    vars:
      TERRAFORM_DIR: '{{default "1-terraform" .TERRAFORM_DIR}}'
    cmds:
      - echo ""
      - echo "ðŸš€ tasks-terraform - show [ TERRAFORM_DIR - {{.TERRAFORM_DIR}}, STAGE - {{.STAGE}} ]"
      - 'echo "   cwd: $(pwd)"'
      - echo ""
      - terraform show -json .terraform/tfplan > tfplan.tfgraph
    requires:
      vars: [STAGE]

  apply:
    desc: "Terraform apply"
    dir: "{{.USER_WORKING_DIR}}/{{.TERRAFORM_DIR}}/environment/{{.STAGE}}"
    vars:
      TERRAFORM_DIR: '{{default "1-terraform" .TERRAFORM_DIR}}'
    cmds:
      - echo ""
      - echo "ðŸš€ tasks-terraform - apply [ TERRAFORM_DIR - {{.TERRAFORM_DIR}}, STAGE - {{.STAGE}} ]"
      - 'echo "   cwd: $(pwd)"'
      - echo ""
      - terraform apply .terraform/tfplan
    requires:
      vars: [STAGE]

  destroy:
    desc: "Terraform destroy"
    dir: "{{.USER_WORKING_DIR}}/{{.TERRAFORM_DIR}}/environment/{{.STAGE}}"
    vars:
      TERRAFORM_DIR: '{{default "1-terraform" .TERRAFORM_DIR}}'
    cmds:
      - echo ""
      - echo "ðŸš€ tasks-terraform - destroy [ TERRAFORM_DIR - {{.TERRAFORM_DIR}}, STAGE - {{.STAGE}} ]"
      - 'echo "   cwd: $(pwd)"'
      - echo ""
      - terraform destroy
    requires:
      vars: [STAGE]

  test:
    desc: Run all tests
    dir: "{{.USER_WORKING_DIR}}/{{.TERRAFORM_DIR}}/environment/{{.STAGE}}"
    vars:
      TERRAFORM_DIR: '{{default "1-terraform" .TERRAFORM_DIR}}'
    cmds:
      - echo ""
      - echo "ðŸš€ tasks-terraform - test [ TERRAFORM_DIR - {{.TERRAFORM_DIR}}, STAGE - {{.STAGE}} ]"
      - 'echo "   cwd: $(pwd)"'
      - echo ""
      - tflint
      - terraform validate
      - echo ""
      - terraform fmt -check -diff -recursive
      - echo ""
    requires:
      vars: [STAGE]
