# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: 3

silent: true

tasks:
  init:
    dir: "{{.USER_WORKING_DIR}}/{{.TERRAFORM_DIR}}/environment/{{.STAGE}}"
    vars:
      TERRAFORM_DIR: '{{default "1-terraform" .TERRAFORM_DIR}}'
      SKIP_TERRAFORM: '{{default "false" .SKIP_TERRAFORM}}'
      DEBUG: '{{default "false" .DEBUG}}'
      DRY_RUN: '{{default "false" .DRY_RUN}}'
      COMMAND: |
        terraform init -reconfigure \
          -backend-config="address=https://{{.GITLAB_HOST}}/api/v4/projects/{{.GITLAB_PROJECT_ID}}/terraform/state/{{.STAGE}}" \
          -backend-config="lock_address=https://{{.GITLAB_HOST}}/api/v4/projects/{{.GITLAB_PROJECT_ID}}/terraform/state/{{.STAGE}}/lock" \
          -backend-config="unlock_address=https://{{.GITLAB_HOST}}/api/v4/projects/{{.GITLAB_PROJECT_ID}}/terraform/state/{{.STAGE}}/lock" \
          -backend-config="username={{.TF_HTTP_USERNAME}}" \
          -backend-config="password={{.TF_HTTP_PASSWORD}}" \
          -backend-config="lock_method=POST" \
          -backend-config="unlock_method=DELETE" \
          -backend-config="retry_wait_min=5"
    cmds:
      - |
        echo "ðŸš€ {{.TASK}} ($(pwd))"
        echo "     TERRAFORM_DIR: {{.TERRAFORM_DIR}}"
        echo "     STAGE: {{.STAGE}}"
        echo "     GITLAB_HOST: {{.GITLAB_HOST}}"
        echo "     HTTP_USERNAME: {{.TF_HTTP_USERNAME}}"
        echo "     HTTP_PASSWORD: {{.TF_HTTP_PASSWORD}}"
        echo "     GITLAB_PROJECT_ID: {{.GITLAB_PROJECT_ID}}"

        if [ "$SKIP_TERRAFORM" == "true" ]; then
          echo ""
          echo "   SKIP_TERRAFORM is set to true, skipping task {{.TASK}}."
          exit 0
        fi

        if [ "{{.DEBUG}}" == "true" ]; then
          echo "     COMMAND: {{.COMMAND}}"
        fi

        if [ "{{.DRY_RUN}}" == "true" ]; then
          echo "     Skipping command execution due to DRY_RUN."
        else
          {{.COMMAND}}
        fi
    requires:
      vars: [STAGE, GITLAB_HOST, GITLAB_PROJECT_ID]

  lint:
    desc: Run all tests
    dir: "{{.USER_WORKING_DIR}}/{{.TERRAFORM_DIR}}/environment/{{.STAGE}}"
    vars:
      TERRAFORM_DIR: '{{default "1-terraform" .TERRAFORM_DIR}}'
      COMMAND: |
        tflint && \
        terraform validate && \
        terraform fmt -check -diff -recursive
    cmds:
      - |
        echo ""
        echo "ðŸš€ {{.TASK}} ($(pwd))[ TERRAFORM_DIR - {{.TERRAFORM_DIR}}, STAGE - {{.STAGE}} ]"
        echo "     TERRAFORM_DIR: {{.TERRAFORM_DIR}}"
        echo "     STAGE: {{.STAGE}}"

        if [ "$SKIP_TERRAFORM" == "true" ]; then
          echo ""
          echo "   SKIP_TERRAFORM is set to true, skipping task {{.TASK}}."
          exit 0
        fi

        if [ "{{.DEBUG}}" == "true" ]; then
          echo "     COMMAND: {{.COMMAND}}"
        fi

        if [ "{{.DRY_RUN}}" == "true" ]; then
          echo "     Skipping command execution due to DRY_RUN."
        else
          {{.COMMAND}}
        fi
    requires:
      vars: [STAGE]

  plan:
    desc: "Terraform plan"
    dir: "{{.USER_WORKING_DIR}}/{{.TERRAFORM_DIR}}/environment/{{.STAGE}}"
    vars:
      TERRAFORM_DIR: '{{default "1-terraform" .TERRAFORM_DIR}}'
      VAR_FILE_ARGS:
        sh: 'if [ -f "{{.USER_WORKING_DIR}}/{{.TERRAFORM_DIR}}/environment/{{.STAGE}}/terraform.tfvars" ]; then echo "-var-file=terraform.tfvars"; else echo ""; fi'
      DEBUG: '{{default "false" .DEBUG}}'
      DRY_RUN: '{{default "false" .DRY_RUN}}'
      COMMAND: |
        terraform plan {{.VAR_FILE_ARGS}} -out=.terraform/tfplan
    cmds:
      - |
        echo ""
        echo "ðŸš€ {{.TASK}} ($(pwd))"
        echo "     TERRAFORM_DIR: {{.TERRAFORM_DIR}}"
        echo "     STAGE: {{.STAGE}}"
        echo "     VAR_FILE_ARGS: {{.VAR_FILE_ARGS}}"

        if [ "$SKIP_TERRAFORM" == "true" ]; then
          echo ""
          echo "   SKIP_TERRAFORM is set to true, skipping task {{.TASK}}."
          exit 0
        fi

        if [ "{{.DEBUG}}" == "true" ]; then
          echo "     COMMAND: {{.COMMAND}}"
        fi

        if [ "{{.DRY_RUN}}" == "true" ]; then
          echo "     Skipping command execution due to DRY_RUN."
        else
          {{.COMMAND}}
        fi

    requires:
      vars: [STAGE]

  show:
    desc: "Terraform show"
    dir: "{{.USER_WORKING_DIR}}/{{.TERRAFORM_DIR}}/environment/{{.STAGE}}"
    vars:
      TERRAFORM_DIR: '{{default "1-terraform" .TERRAFORM_DIR}}'
      VAR_FILE_ARGS:
        sh: 'if [ -f "{{.USER_WORKING_DIR}}/{{.TERRAFORM_DIR}}/environment/{{.STAGE}}/terraform.tfvars" ]; then echo "-var-file=terraform.tfvars"; else echo ""; fi'
      DEBUG: '{{default "false" .DEBUG}}'
      DRY_RUN: '{{default "false" .DRY_RUN}}'
      COMMAND: |
        terraform show -json .terraform/tfplan > .terraform/tfplan.tfgraph
    cmds:
      - |
        echo ""
        echo "ðŸš€ {{.TASK}} ($(pwd))"
        echo "     TERRAFORM_DIR: {{.TERRAFORM_DIR}}"
        echo "     STAGE: {{.STAGE}}"
        echo "     VAR_FILE_ARGS: {{.VAR_FILE_ARGS}}"

        if [ "$SKIP_TERRAFORM" == "true" ]; then
          echo ""
          echo "   SKIP_TERRAFORM is set to true, skipping task {{.TASK}}."
          exit 0
        fi

        if [ "{{.DEBUG}}" == "true" ]; then
          echo "     COMMAND: {{.COMMAND}}"
        fi

        if [ "{{.DRY_RUN}}" == "true" ]; then
          echo "     Skipping command execution due to DRY_RUN."
        else
          {{.COMMAND}}
        fi
    requires:
      vars: [STAGE]

  apply:
    desc: "Terraform apply"
    dir: "{{.USER_WORKING_DIR}}/{{.TERRAFORM_DIR}}/environment/{{.STAGE}}"
    vars:
      TERRAFORM_DIR: '{{default "1-terraform" .TERRAFORM_DIR}}'
      AUTO_APPLY: '{{default "false" .AUTO_APPLY}}'
    cmds:
      - |
        echo ""
        echo "ðŸš€ {{.TASK}} ($(pwd))"
        echo "     TERRAFORM_DIR: {{.TERRAFORM_DIR}}"
        echo "     STAGE: {{.STAGE}}"
        echo "     AUTO_APPLY: {{.AUTO_APPLY}}"

        if [ "$SKIP_TERRAFORM" == "true" ]; then
          echo ""
          echo "   SKIP_TERRAFORM is set to true, skipping task {{.TASK}}."
          exit 0
        fi

        if [ "{{.DRY_RUN}}" == "true" ]; then
          echo "     Skipping command execution due to DRY_RUN."
        else
          if [[ "{{.AUTO_APPLY}}" == true ]]; then
            terraform apply .terraform/tfplan
            exit 0
          else 
            echo "Do you want to apply the Terraform plan? (yes/No)"
            read -r response
            if [[ "{{.AUTO_APPLY}}" == true || "$response" =~ ^[yY][eE][sS]$ ]]; then
              terraform apply .terraform/tfplan
            else
              echo "Terraform apply aborted."
              exit 0
            fi
          fi
        fi
    requires:
      vars: [STAGE]

  destroy:
    desc: "Terraform destroy"
    dir: "{{.USER_WORKING_DIR}}/{{.TERRAFORM_DIR}}/environment/{{.STAGE}}"
    vars:
      TERRAFORM_DIR: '{{default "1-terraform" .TERRAFORM_DIR}}'
      VAR_FILE_ARGS:
        sh: 'if [ -f "{{.USER_WORKING_DIR}}/{{.TERRAFORM_DIR}}/environment/{{.STAGE}}/terraform.tfvars" ]; then echo "-var-file=terraform.tfvars"; else echo ""; fi'
      DEBUG: '{{default "false" .DEBUG}}'
      DRY_RUN: '{{default "false" .DRY_RUN}}'
      COMMAND: |
        terraform destroy {{.VAR_FILE_ARGS}}
    cmds:
      - |
        echo ""
        echo "ðŸš€ {{.TASK}} ($(pwd))"
        echo "     TERRAFORM_DIR: {{.TERRAFORM_DIR}}"
        echo "     STAGE: {{.STAGE}}"
        echo "     VAR_FILE_ARGS: {{.VAR_FILE_ARGS}}"

        if [ "$SKIP_TERRAFORM" == "true" ]; then
          echo ""
          echo "   SKIP_TERRAFORM is set to true, skipping task {{.TASK}}."
          exit 0
        fi

        if [ "{{.DEBUG}}" == "true" ]; then
          echo "     COMMAND: {{.COMMAND}}"
        fi

        if [ "{{.DRY_RUN}}" == "true" ]; then
          echo "     Skipping command execution due to DRY_RUN."
        else
          {{.COMMAND}}
        fi
    requires:
      vars: [STAGE]
