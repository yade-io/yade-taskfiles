# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: 3

silent: true

tasks:
  install:requirements:
    desc: "Install ansible requirements"
    dir: "{{.ANSIBLE_DIR}}"
    vars:
      ANSIBLE_DIR: '{{default "2-ansible" .ANSIBLE_DIR}}'
      DEBUG: '{{default "false" .DEBUG}}'
      DRY_RUN: '{{default "false" .DRY_RUN}}'
      COMMAND: |
        ansible-galaxy install -r requirements.yml --force
    cmds:
      - |
        echo ""
        echo "ðŸš€ {{.TASK}} ($(pwd))"
        echo "     ANSIBLE_DIR: {{.ANSIBLE_DIR}}"

        if [ "$SKIP_ANSIBLE" == "true" ]; then
          echo ""
          echo "   SKIP_ANSIBLE is set to true, skipping task {{.TASK}}."
          exit 0
        fi

        if [ "{{.DEBUG}}" == "true" ]; then
          echo "     COMMAND: {{.COMMAND}}"
        fi

        if [ "{{.DRY_RUN}}" == "true" ]; then
          echo "     Skipping command execution due to DRY_RUN."
        else
          {{.COMMAND}}
        fi

  connectivity:test:
    dir: "{{.ANSIBLE_DIR}}"
    vars:
      ANSIBLE_DIR: '{{default "2-ansible" .ANSIBLE_DIR}}'
      DRY_RUN: '{{default "false" .DRY_RUN}}'
      COMMAND: |
        ansible \
          -e ssh_private_key_file=~/.ssh/id_rsa \
          -e ANSIBLE_SSH_PRIVATE_KEY_FILE=~/.ssh/id_rsa \
          --private-key=~/.ssh/id_rsa \
          -i ../1-terraform/environment/{{.STAGE}}/tf-output/ansible_inventory.yml \
          -m ping all
    cmds:
      - |
        echo ""
        echo "ðŸš€ {{.TASK}} ($(pwd))"
        echo "     STAGE: {{.STAGE}}"
        echo "     ANSIBLE_DIR: {{.ANSIBLE_DIR}}"

        if [ "$SKIP_ANSIBLE" == "true" ]; then
          echo ""
          echo "   SKIP_ANSIBLE is set to true, skipping task {{.TASK}}."
          exit 0
        fi

        if [ "{{.DEBUG}}" == "true" ]; then
          echo "     COMMAND: {{.COMMAND}}"
        fi

        if [ "{{.DRY_RUN}}" == "true" ]; then
          echo "     Skipping command execution due to DRY_RUN."
        else
          {{.COMMAND}}
        fi
    requires:
      vars: [STAGE]

  inventory:print:
    dir: "{{.ANSIBLE_DIR}}"
    vars:
      ANSIBLE_DIR: '{{default "2-ansible" .ANSIBLE_DIR}}'
      DEBUG: '{{default "false" .DEBUG}}'
      DRY_RUN: '{{default "false" .DRY_RUN}}'
      COMMAND: |
        ansible-inventory \
          -i ../1-terraform/environment/{{.STAGE}}/tf-output/ansible_inventory.yml \
          --graph --vars
    cmds:
      - |
        echo ""
        echo "ðŸš€ {{.TASK}} ($(pwd))"
        echo "     STAGE: {{.STAGE}}"
        echo "     ANSIBLE_DIR: {{.ANSIBLE_DIR}}"

        if [ "$SKIP_ANSIBLE" == "true" ]; then
          echo ""
          echo "   SKIP_ANSIBLE is set to true, skipping task {{.TASK}}."
          exit 0
        fi

        if [ "{{.DEBUG}}" == "true" ]; then
          echo "     COMMAND: {{.COMMAND}}"
        fi

        if [ "{{.DRY_RUN}}" == "true" ]; then
          echo "     Skipping command execution due to DRY_RUN."
        else
          {{.COMMAND}}
        fi
    requires:
      vars: [STAGE]

  playbook:site:
    dir: "{{.ANSIBLE_DIR}}"
    vars:
      ANSIBLE_DIR: '{{default "2-ansible" .ANSIBLE_DIR}}'
      PLAYBOOK: '{{default "site.yml" .PLAYBOOK}}'
      PROJECT_NAME:
        sh: basename "{{.USER_WORKING_DIR}}"
      TAGS_ARG: '{{if .TAGS}}--tags \""{{ .TAGS }}"\"{{end}}'
      VARIABLES_ARGS: '{{if .VARIABLES}}-e "{{.VARIABLES}}"{{end}}'
      DEBUG: '{{default "false" .DEBUG}}'
      DRY_RUN: '{{default "false" .DRY_RUN}}'
      COMMAND: |
        ansible-playbook \
          -e environment_type={{.STAGE}} \
          -e environment_name={{.PROJECT_NAME}}-{{.STAGE}} \
          -e ssh_private_key_file=~/.ssh/id_rsa \
          -e ANSIBLE_SSH_PRIVATE_KEY_FILE=~/.ssh/id_rsa \
          {{ .VARIABLES_ARGS }} \
          --private-key=~/.ssh/id_rsa \
          --inventory ../1-terraform/environment/{{.STAGE}}/tf-output/ansible_inventory.yml \
          {{ .TAGS_ARG }} \
          "{{.PLAYBOOK}}"
    cmds:
      - |
        echo ""
        echo "ðŸš€ {{.TASK}} ($(pwd))"
        echo "     STAGE: {{.STAGE}}"
        echo "     TAGS: {{.TAGS}}"
        echo "     ANSIBLE_DIR: {{.ANSIBLE_DIR}}"
        echo "     PLAYBOOK: {{.PLAYBOOK}}"
        echo "     PROJECT_NAME: {{.PROJECT_NAME}}"

        if [ "$SKIP_ANSIBLE" == "true" ]; then
          echo ""
          echo "   SKIP_ANSIBLE is set to true, skipping task {{.TASK}}."
          exit 0
        fi

        if [ "{{.DEBUG}}" == "true" ]; then
          echo "     COMMAND: {{.COMMAND}}"
        fi

        if [ "{{.DRY_RUN}}" == "true" ]; then
          echo "     Skipping command execution due to DRY_RUN."
        else
          {{.COMMAND}}
        fi
    requires:
      vars: [STAGE]
